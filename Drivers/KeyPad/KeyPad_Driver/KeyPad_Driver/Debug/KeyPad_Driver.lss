
KeyPad_Driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000374  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000003c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000003c8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000003f8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000078  00000000  00000000  00000434  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b6a  00000000  00000000  000004ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000071b  00000000  00000000  00001016  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000688  00000000  00000000  00001731  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000009c  00000000  00000000  00001dbc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003f1  00000000  00000000  00001e58  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000240  00000000  00000000  00002249  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  00002489  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 71 01 	call	0x2e2	; 0x2e2 <main>
  64:	0c 94 b8 01 	jmp	0x370	; 0x370 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_VoidInit>:
#include "DIO_priv.h"
#include "stdbool.h"


void DIO_VoidInit(void){
	DDRA = DIO_u8_PORTA_DIR;
  6c:	1a ba       	out	0x1a, r1	; 26
	DDRB = DIO_u8_PORTB_DIR;
  6e:	80 ef       	ldi	r24, 0xF0	; 240
  70:	87 bb       	out	0x17, r24	; 23
	DDRC = DIO_u8_PORTC_DIR;
  72:	84 e8       	ldi	r24, 0x84	; 132
  74:	84 bb       	out	0x14, r24	; 20
	DDRD = DIO_u8_PORTD_DIR;
  76:	88 e0       	ldi	r24, 0x08	; 8
  78:	81 bb       	out	0x11, r24	; 17
  7a:	08 95       	ret

0000007c <DIO_VoidSetPinValue>:
}

void DIO_VoidSetPinValue(u8 DIO_u8Port , u8 DIO_u8Pin , u8 DIO_u8Val){
	switch(DIO_u8Port)
  7c:	86 30       	cpi	r24, 0x06	; 6
  7e:	29 f1       	breq	.+74     	; 0xca <DIO_VoidSetPinValue+0x4e>
  80:	18 f4       	brcc	.+6      	; 0x88 <DIO_VoidSetPinValue+0xc>
  82:	85 30       	cpi	r24, 0x05	; 5
  84:	39 f0       	breq	.+14     	; 0x94 <DIO_VoidSetPinValue+0x18>
  86:	08 95       	ret
  88:	87 30       	cpi	r24, 0x07	; 7
  8a:	d1 f1       	breq	.+116    	; 0x100 <DIO_VoidSetPinValue+0x84>
  8c:	88 30       	cpi	r24, 0x08	; 8
  8e:	09 f4       	brne	.+2      	; 0x92 <DIO_VoidSetPinValue+0x16>
  90:	52 c0       	rjmp	.+164    	; 0x136 <DIO_VoidSetPinValue+0xba>
  92:	08 95       	ret
	{
		case DIO_u8_PORTA:
			if(DIO_u8Val == DIO_PIN_HIGH)
  94:	41 30       	cpi	r20, 0x01	; 1
  96:	59 f4       	brne	.+22     	; 0xae <DIO_VoidSetPinValue+0x32>
				SET_BIT(PORTA, DIO_u8Pin);
  98:	2b b3       	in	r18, 0x1b	; 27
  9a:	81 e0       	ldi	r24, 0x01	; 1
  9c:	90 e0       	ldi	r25, 0x00	; 0
  9e:	02 c0       	rjmp	.+4      	; 0xa4 <DIO_VoidSetPinValue+0x28>
  a0:	88 0f       	add	r24, r24
  a2:	99 1f       	adc	r25, r25
  a4:	6a 95       	dec	r22
  a6:	e2 f7       	brpl	.-8      	; 0xa0 <DIO_VoidSetPinValue+0x24>
  a8:	82 2b       	or	r24, r18
  aa:	8b bb       	out	0x1b, r24	; 27
  ac:	08 95       	ret
			else if(DIO_u8Val == DIO_PIN_LOW)
  ae:	41 11       	cpse	r20, r1
  b0:	5c c0       	rjmp	.+184    	; 0x16a <DIO_VoidSetPinValue+0xee>
				CLEAR_BIT(PORTA, DIO_u8Pin);
  b2:	2b b3       	in	r18, 0x1b	; 27
  b4:	81 e0       	ldi	r24, 0x01	; 1
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	02 c0       	rjmp	.+4      	; 0xbe <DIO_VoidSetPinValue+0x42>
  ba:	88 0f       	add	r24, r24
  bc:	99 1f       	adc	r25, r25
  be:	6a 95       	dec	r22
  c0:	e2 f7       	brpl	.-8      	; 0xba <DIO_VoidSetPinValue+0x3e>
  c2:	80 95       	com	r24
  c4:	82 23       	and	r24, r18
  c6:	8b bb       	out	0x1b, r24	; 27
  c8:	08 95       	ret
			break;
		case DIO_u8_PORTB:
			if(DIO_u8Val == DIO_PIN_HIGH)
  ca:	41 30       	cpi	r20, 0x01	; 1
  cc:	59 f4       	brne	.+22     	; 0xe4 <DIO_VoidSetPinValue+0x68>
				SET_BIT(PORTB, DIO_u8Pin);
  ce:	28 b3       	in	r18, 0x18	; 24
  d0:	81 e0       	ldi	r24, 0x01	; 1
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	02 c0       	rjmp	.+4      	; 0xda <DIO_VoidSetPinValue+0x5e>
  d6:	88 0f       	add	r24, r24
  d8:	99 1f       	adc	r25, r25
  da:	6a 95       	dec	r22
  dc:	e2 f7       	brpl	.-8      	; 0xd6 <DIO_VoidSetPinValue+0x5a>
  de:	82 2b       	or	r24, r18
  e0:	88 bb       	out	0x18, r24	; 24
  e2:	08 95       	ret
			else if(DIO_u8Val == DIO_PIN_LOW)
  e4:	41 11       	cpse	r20, r1
  e6:	41 c0       	rjmp	.+130    	; 0x16a <DIO_VoidSetPinValue+0xee>
				CLEAR_BIT(PORTB, DIO_u8Pin);
  e8:	28 b3       	in	r18, 0x18	; 24
  ea:	81 e0       	ldi	r24, 0x01	; 1
  ec:	90 e0       	ldi	r25, 0x00	; 0
  ee:	02 c0       	rjmp	.+4      	; 0xf4 <DIO_VoidSetPinValue+0x78>
  f0:	88 0f       	add	r24, r24
  f2:	99 1f       	adc	r25, r25
  f4:	6a 95       	dec	r22
  f6:	e2 f7       	brpl	.-8      	; 0xf0 <DIO_VoidSetPinValue+0x74>
  f8:	80 95       	com	r24
  fa:	82 23       	and	r24, r18
  fc:	88 bb       	out	0x18, r24	; 24
  fe:	08 95       	ret
			break;
		case DIO_u8_PORTC:
			if(DIO_u8Val == DIO_PIN_HIGH)
 100:	41 30       	cpi	r20, 0x01	; 1
 102:	59 f4       	brne	.+22     	; 0x11a <DIO_VoidSetPinValue+0x9e>
				SET_BIT(PORTC, DIO_u8Pin);
 104:	25 b3       	in	r18, 0x15	; 21
 106:	81 e0       	ldi	r24, 0x01	; 1
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	02 c0       	rjmp	.+4      	; 0x110 <DIO_VoidSetPinValue+0x94>
 10c:	88 0f       	add	r24, r24
 10e:	99 1f       	adc	r25, r25
 110:	6a 95       	dec	r22
 112:	e2 f7       	brpl	.-8      	; 0x10c <DIO_VoidSetPinValue+0x90>
 114:	82 2b       	or	r24, r18
 116:	85 bb       	out	0x15, r24	; 21
 118:	08 95       	ret
			else if(DIO_u8Val == DIO_PIN_LOW)
 11a:	41 11       	cpse	r20, r1
 11c:	26 c0       	rjmp	.+76     	; 0x16a <DIO_VoidSetPinValue+0xee>
				CLEAR_BIT(PORTC, DIO_u8Pin);
 11e:	25 b3       	in	r18, 0x15	; 21
 120:	81 e0       	ldi	r24, 0x01	; 1
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	02 c0       	rjmp	.+4      	; 0x12a <DIO_VoidSetPinValue+0xae>
 126:	88 0f       	add	r24, r24
 128:	99 1f       	adc	r25, r25
 12a:	6a 95       	dec	r22
 12c:	e2 f7       	brpl	.-8      	; 0x126 <DIO_VoidSetPinValue+0xaa>
 12e:	80 95       	com	r24
 130:	82 23       	and	r24, r18
 132:	85 bb       	out	0x15, r24	; 21
 134:	08 95       	ret
			break;
		case DIO_u8_PORTD:
			if(DIO_u8Val == DIO_PIN_HIGH)
 136:	41 30       	cpi	r20, 0x01	; 1
 138:	59 f4       	brne	.+22     	; 0x150 <DIO_VoidSetPinValue+0xd4>
				SET_BIT(PORTD, DIO_u8Pin);
 13a:	22 b3       	in	r18, 0x12	; 18
 13c:	81 e0       	ldi	r24, 0x01	; 1
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	02 c0       	rjmp	.+4      	; 0x146 <DIO_VoidSetPinValue+0xca>
 142:	88 0f       	add	r24, r24
 144:	99 1f       	adc	r25, r25
 146:	6a 95       	dec	r22
 148:	e2 f7       	brpl	.-8      	; 0x142 <DIO_VoidSetPinValue+0xc6>
 14a:	82 2b       	or	r24, r18
 14c:	82 bb       	out	0x12, r24	; 18
 14e:	08 95       	ret
			else if(DIO_u8Val == DIO_PIN_LOW)
 150:	41 11       	cpse	r20, r1
 152:	0b c0       	rjmp	.+22     	; 0x16a <DIO_VoidSetPinValue+0xee>
				CLEAR_BIT(PORTD, DIO_u8Pin);
 154:	22 b3       	in	r18, 0x12	; 18
 156:	81 e0       	ldi	r24, 0x01	; 1
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	02 c0       	rjmp	.+4      	; 0x160 <DIO_VoidSetPinValue+0xe4>
 15c:	88 0f       	add	r24, r24
 15e:	99 1f       	adc	r25, r25
 160:	6a 95       	dec	r22
 162:	e2 f7       	brpl	.-8      	; 0x15c <DIO_VoidSetPinValue+0xe0>
 164:	80 95       	com	r24
 166:	82 23       	and	r24, r18
 168:	82 bb       	out	0x12, r24	; 18
 16a:	08 95       	ret

0000016c <KeyPad_Init>:
#define RawPort PORTB
#define ColumnPort PORTC
#define ReadCol PINC

void KeyPad_Init(void){
	DIO_VoidSetPinValue(RawPort, DIO_u8_PIN4, DIO_PIN_LOW);
 16c:	88 b3       	in	r24, 0x18	; 24
 16e:	40 e0       	ldi	r20, 0x00	; 0
 170:	64 e0       	ldi	r22, 0x04	; 4
 172:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_VoidSetPinValue>
	DIO_VoidSetPinValue(RawPort, DIO_u8_PIN5, DIO_PIN_LOW);
 176:	88 b3       	in	r24, 0x18	; 24
 178:	40 e0       	ldi	r20, 0x00	; 0
 17a:	65 e0       	ldi	r22, 0x05	; 5
 17c:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_VoidSetPinValue>
	DIO_VoidSetPinValue(RawPort, DIO_u8_PIN6, DIO_PIN_LOW);
 180:	88 b3       	in	r24, 0x18	; 24
 182:	40 e0       	ldi	r20, 0x00	; 0
 184:	66 e0       	ldi	r22, 0x06	; 6
 186:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_VoidSetPinValue>
	DIO_VoidSetPinValue(RawPort, DIO_u8_PIN7, DIO_PIN_LOW);
 18a:	88 b3       	in	r24, 0x18	; 24
 18c:	40 e0       	ldi	r20, 0x00	; 0
 18e:	67 e0       	ldi	r22, 0x07	; 7
 190:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_VoidSetPinValue>
	
	DIO_VoidSetPinValue(ColumnPort, DIO_u8_PIN3, DIO_PIN_HIGH);
 194:	85 b3       	in	r24, 0x15	; 21
 196:	41 e0       	ldi	r20, 0x01	; 1
 198:	63 e0       	ldi	r22, 0x03	; 3
 19a:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_VoidSetPinValue>
	DIO_VoidSetPinValue(ColumnPort, DIO_u8_PIN4, DIO_PIN_HIGH);
 19e:	85 b3       	in	r24, 0x15	; 21
 1a0:	41 e0       	ldi	r20, 0x01	; 1
 1a2:	64 e0       	ldi	r22, 0x04	; 4
 1a4:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_VoidSetPinValue>
	DIO_VoidSetPinValue(ColumnPort, DIO_u8_PIN5, DIO_PIN_HIGH);
 1a8:	85 b3       	in	r24, 0x15	; 21
 1aa:	41 e0       	ldi	r20, 0x01	; 1
 1ac:	65 e0       	ldi	r22, 0x05	; 5
 1ae:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_VoidSetPinValue>
	DIO_VoidSetPinValue(ColumnPort, DIO_u8_PIN6, DIO_PIN_HIGH);
 1b2:	85 b3       	in	r24, 0x15	; 21
 1b4:	41 e0       	ldi	r20, 0x01	; 1
 1b6:	66 e0       	ldi	r22, 0x06	; 6
 1b8:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_VoidSetPinValue>
 1bc:	08 95       	ret

000001be <Kpad_RetVal>:
}

u8 Kpad_RetVal(void){
	DIO_VoidSetPinValue(RawPort, DIO_u8_PIN4, DIO_PIN_LOW);
 1be:	88 b3       	in	r24, 0x18	; 24
 1c0:	40 e0       	ldi	r20, 0x00	; 0
 1c2:	64 e0       	ldi	r22, 0x04	; 4
 1c4:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_VoidSetPinValue>
	DIO_VoidSetPinValue(RawPort, DIO_u8_PIN5, DIO_PIN_HIGH);
 1c8:	88 b3       	in	r24, 0x18	; 24
 1ca:	41 e0       	ldi	r20, 0x01	; 1
 1cc:	65 e0       	ldi	r22, 0x05	; 5
 1ce:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_VoidSetPinValue>
	DIO_VoidSetPinValue(RawPort, DIO_u8_PIN6, DIO_PIN_HIGH);
 1d2:	88 b3       	in	r24, 0x18	; 24
 1d4:	41 e0       	ldi	r20, 0x01	; 1
 1d6:	66 e0       	ldi	r22, 0x06	; 6
 1d8:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_VoidSetPinValue>
	DIO_VoidSetPinValue(RawPort, DIO_u8_PIN7, DIO_PIN_HIGH);
 1dc:	88 b3       	in	r24, 0x18	; 24
 1de:	41 e0       	ldi	r20, 0x01	; 1
 1e0:	67 e0       	ldi	r22, 0x07	; 7
 1e2:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_VoidSetPinValue>
	
	if((ReadCol & (1<<3)) == 0) return R1C1;
 1e6:	9b 9b       	sbis	0x13, 3	; 19
 1e8:	5c c0       	rjmp	.+184    	; 0x2a2 <Kpad_RetVal+0xe4>
	else if((ReadCol & (1<<4)) == 0) return R1C2;
 1ea:	9c 9b       	sbis	0x13, 4	; 19
 1ec:	5c c0       	rjmp	.+184    	; 0x2a6 <Kpad_RetVal+0xe8>
	else if((ReadCol & (1<<5)) == 0) return R1C3;
 1ee:	9d 9b       	sbis	0x13, 5	; 19
 1f0:	5c c0       	rjmp	.+184    	; 0x2aa <Kpad_RetVal+0xec>
	else if((ReadCol & (1<<6)) == 0) return R1C4;
 1f2:	9e 9b       	sbis	0x13, 6	; 19
 1f4:	5c c0       	rjmp	.+184    	; 0x2ae <Kpad_RetVal+0xf0>
	
	DIO_VoidSetPinValue(RawPort, DIO_u8_PIN4, DIO_PIN_HIGH);
 1f6:	88 b3       	in	r24, 0x18	; 24
 1f8:	41 e0       	ldi	r20, 0x01	; 1
 1fa:	64 e0       	ldi	r22, 0x04	; 4
 1fc:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_VoidSetPinValue>
	DIO_VoidSetPinValue(RawPort, DIO_u8_PIN5, DIO_PIN_LOW);
 200:	88 b3       	in	r24, 0x18	; 24
 202:	40 e0       	ldi	r20, 0x00	; 0
 204:	65 e0       	ldi	r22, 0x05	; 5
 206:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_VoidSetPinValue>
	DIO_VoidSetPinValue(RawPort, DIO_u8_PIN6, DIO_PIN_HIGH);
 20a:	88 b3       	in	r24, 0x18	; 24
 20c:	41 e0       	ldi	r20, 0x01	; 1
 20e:	66 e0       	ldi	r22, 0x06	; 6
 210:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_VoidSetPinValue>
	DIO_VoidSetPinValue(RawPort, DIO_u8_PIN7, DIO_PIN_HIGH);
 214:	88 b3       	in	r24, 0x18	; 24
 216:	41 e0       	ldi	r20, 0x01	; 1
 218:	67 e0       	ldi	r22, 0x07	; 7
 21a:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_VoidSetPinValue>
	
	if((ReadCol & (1<<3)) == 0) return R2C1;
 21e:	9b 9b       	sbis	0x13, 3	; 19
 220:	48 c0       	rjmp	.+144    	; 0x2b2 <Kpad_RetVal+0xf4>
	else if((ReadCol & (1<<4)) == 0) return R2C2;
 222:	9c 9b       	sbis	0x13, 4	; 19
 224:	48 c0       	rjmp	.+144    	; 0x2b6 <Kpad_RetVal+0xf8>
	else if((ReadCol & (1<<5)) == 0) return R2C3;
 226:	9d 9b       	sbis	0x13, 5	; 19
 228:	48 c0       	rjmp	.+144    	; 0x2ba <Kpad_RetVal+0xfc>
	else if((ReadCol & (1<<6)) == 0) return R2C4;
 22a:	9e 9b       	sbis	0x13, 6	; 19
 22c:	48 c0       	rjmp	.+144    	; 0x2be <Kpad_RetVal+0x100>
	
	DIO_VoidSetPinValue(RawPort, DIO_u8_PIN4, DIO_PIN_HIGH);
 22e:	88 b3       	in	r24, 0x18	; 24
 230:	41 e0       	ldi	r20, 0x01	; 1
 232:	64 e0       	ldi	r22, 0x04	; 4
 234:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_VoidSetPinValue>
	DIO_VoidSetPinValue(RawPort, DIO_u8_PIN5, DIO_PIN_HIGH);
 238:	88 b3       	in	r24, 0x18	; 24
 23a:	41 e0       	ldi	r20, 0x01	; 1
 23c:	65 e0       	ldi	r22, 0x05	; 5
 23e:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_VoidSetPinValue>
	DIO_VoidSetPinValue(RawPort, DIO_u8_PIN6, DIO_PIN_LOW);
 242:	88 b3       	in	r24, 0x18	; 24
 244:	40 e0       	ldi	r20, 0x00	; 0
 246:	66 e0       	ldi	r22, 0x06	; 6
 248:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_VoidSetPinValue>
	DIO_VoidSetPinValue(RawPort, DIO_u8_PIN7, DIO_PIN_HIGH);
 24c:	88 b3       	in	r24, 0x18	; 24
 24e:	41 e0       	ldi	r20, 0x01	; 1
 250:	67 e0       	ldi	r22, 0x07	; 7
 252:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_VoidSetPinValue>
	
	if((ReadCol & (1<<3)) == 0) return R3C1;
 256:	9b 9b       	sbis	0x13, 3	; 19
 258:	34 c0       	rjmp	.+104    	; 0x2c2 <Kpad_RetVal+0x104>
	else if((ReadCol & (1<<4)) == 0) return R3C2;
 25a:	9c 9b       	sbis	0x13, 4	; 19
 25c:	34 c0       	rjmp	.+104    	; 0x2c6 <Kpad_RetVal+0x108>
	else if((ReadCol & (1<<5)) == 0) return R3C3;
 25e:	9d 9b       	sbis	0x13, 5	; 19
 260:	34 c0       	rjmp	.+104    	; 0x2ca <Kpad_RetVal+0x10c>
	else if((ReadCol & (1<<6)) == 0) return R3C4;
 262:	9e 9b       	sbis	0x13, 6	; 19
 264:	34 c0       	rjmp	.+104    	; 0x2ce <Kpad_RetVal+0x110>
	
	DIO_VoidSetPinValue(RawPort, DIO_u8_PIN4, DIO_PIN_HIGH);
 266:	88 b3       	in	r24, 0x18	; 24
 268:	41 e0       	ldi	r20, 0x01	; 1
 26a:	64 e0       	ldi	r22, 0x04	; 4
 26c:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_VoidSetPinValue>
	DIO_VoidSetPinValue(RawPort, DIO_u8_PIN5, DIO_PIN_HIGH);
 270:	88 b3       	in	r24, 0x18	; 24
 272:	41 e0       	ldi	r20, 0x01	; 1
 274:	65 e0       	ldi	r22, 0x05	; 5
 276:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_VoidSetPinValue>
	DIO_VoidSetPinValue(RawPort, DIO_u8_PIN6, DIO_PIN_HIGH);
 27a:	88 b3       	in	r24, 0x18	; 24
 27c:	41 e0       	ldi	r20, 0x01	; 1
 27e:	66 e0       	ldi	r22, 0x06	; 6
 280:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_VoidSetPinValue>
	DIO_VoidSetPinValue(RawPort, DIO_u8_PIN7, DIO_PIN_LOW);
 284:	88 b3       	in	r24, 0x18	; 24
 286:	40 e0       	ldi	r20, 0x00	; 0
 288:	67 e0       	ldi	r22, 0x07	; 7
 28a:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_VoidSetPinValue>
	
	if((ReadCol & (1<<3)) == 0) return R4C1;
 28e:	9b 9b       	sbis	0x13, 3	; 19
 290:	20 c0       	rjmp	.+64     	; 0x2d2 <Kpad_RetVal+0x114>
	else if((ReadCol & (1<<4)) == 0) return R4C2;
 292:	9c 9b       	sbis	0x13, 4	; 19
 294:	20 c0       	rjmp	.+64     	; 0x2d6 <Kpad_RetVal+0x118>
	else if((ReadCol & (1<<5)) == 0) return R4C3;
 296:	9d 9b       	sbis	0x13, 5	; 19
 298:	20 c0       	rjmp	.+64     	; 0x2da <Kpad_RetVal+0x11c>
	else if((ReadCol & (1<<6)) == 0) return R4C4;
 29a:	9e 99       	sbic	0x13, 6	; 19
 29c:	20 c0       	rjmp	.+64     	; 0x2de <Kpad_RetVal+0x120>
 29e:	84 e4       	ldi	r24, 0x44	; 68
 2a0:	08 95       	ret
	DIO_VoidSetPinValue(RawPort, DIO_u8_PIN4, DIO_PIN_LOW);
	DIO_VoidSetPinValue(RawPort, DIO_u8_PIN5, DIO_PIN_HIGH);
	DIO_VoidSetPinValue(RawPort, DIO_u8_PIN6, DIO_PIN_HIGH);
	DIO_VoidSetPinValue(RawPort, DIO_u8_PIN7, DIO_PIN_HIGH);
	
	if((ReadCol & (1<<3)) == 0) return R1C1;
 2a2:	81 e3       	ldi	r24, 0x31	; 49
 2a4:	08 95       	ret
	else if((ReadCol & (1<<4)) == 0) return R1C2;
 2a6:	82 e3       	ldi	r24, 0x32	; 50
 2a8:	08 95       	ret
	else if((ReadCol & (1<<5)) == 0) return R1C3;
 2aa:	83 e3       	ldi	r24, 0x33	; 51
 2ac:	08 95       	ret
	else if((ReadCol & (1<<6)) == 0) return R1C4;
 2ae:	81 e4       	ldi	r24, 0x41	; 65
 2b0:	08 95       	ret
	DIO_VoidSetPinValue(RawPort, DIO_u8_PIN4, DIO_PIN_HIGH);
	DIO_VoidSetPinValue(RawPort, DIO_u8_PIN5, DIO_PIN_LOW);
	DIO_VoidSetPinValue(RawPort, DIO_u8_PIN6, DIO_PIN_HIGH);
	DIO_VoidSetPinValue(RawPort, DIO_u8_PIN7, DIO_PIN_HIGH);
	
	if((ReadCol & (1<<3)) == 0) return R2C1;
 2b2:	84 e3       	ldi	r24, 0x34	; 52
 2b4:	08 95       	ret
	else if((ReadCol & (1<<4)) == 0) return R2C2;
 2b6:	85 e3       	ldi	r24, 0x35	; 53
 2b8:	08 95       	ret
	else if((ReadCol & (1<<5)) == 0) return R2C3;
 2ba:	86 e3       	ldi	r24, 0x36	; 54
 2bc:	08 95       	ret
	else if((ReadCol & (1<<6)) == 0) return R2C4;
 2be:	82 e4       	ldi	r24, 0x42	; 66
 2c0:	08 95       	ret
	DIO_VoidSetPinValue(RawPort, DIO_u8_PIN4, DIO_PIN_HIGH);
	DIO_VoidSetPinValue(RawPort, DIO_u8_PIN5, DIO_PIN_HIGH);
	DIO_VoidSetPinValue(RawPort, DIO_u8_PIN6, DIO_PIN_LOW);
	DIO_VoidSetPinValue(RawPort, DIO_u8_PIN7, DIO_PIN_HIGH);
	
	if((ReadCol & (1<<3)) == 0) return R3C1;
 2c2:	87 e3       	ldi	r24, 0x37	; 55
 2c4:	08 95       	ret
	else if((ReadCol & (1<<4)) == 0) return R3C2;
 2c6:	88 e3       	ldi	r24, 0x38	; 56
 2c8:	08 95       	ret
	else if((ReadCol & (1<<5)) == 0) return R3C3;
 2ca:	89 e3       	ldi	r24, 0x39	; 57
 2cc:	08 95       	ret
	else if((ReadCol & (1<<6)) == 0) return R3C4;
 2ce:	83 e4       	ldi	r24, 0x43	; 67
 2d0:	08 95       	ret
	DIO_VoidSetPinValue(RawPort, DIO_u8_PIN4, DIO_PIN_HIGH);
	DIO_VoidSetPinValue(RawPort, DIO_u8_PIN5, DIO_PIN_HIGH);
	DIO_VoidSetPinValue(RawPort, DIO_u8_PIN6, DIO_PIN_HIGH);
	DIO_VoidSetPinValue(RawPort, DIO_u8_PIN7, DIO_PIN_LOW);
	
	if((ReadCol & (1<<3)) == 0) return R4C1;
 2d2:	8a e2       	ldi	r24, 0x2A	; 42
 2d4:	08 95       	ret
	else if((ReadCol & (1<<4)) == 0) return R4C2;
 2d6:	80 e3       	ldi	r24, 0x30	; 48
 2d8:	08 95       	ret
	else if((ReadCol & (1<<5)) == 0) return R4C3;
 2da:	83 e2       	ldi	r24, 0x23	; 35
 2dc:	08 95       	ret
	else if((ReadCol & (1<<6)) == 0) return R4C4;
	
	return Kpad_NULL;
 2de:	80 e2       	ldi	r24, 0x20	; 32
	
	
 2e0:	08 95       	ret

000002e2 <main>:
#define ReadCol PINC
#define ReadColVal 0x78 // columns default value

int main(void)
{
	PORTC = 0x0; // set LEDs = 0
 2e2:	15 ba       	out	0x15, r1	; 21
	u8 button;
    DIO_VoidInit();
 2e4:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_VoidInit>
	KeyPad_Init();
 2e8:	0e 94 b6 00 	call	0x16c	; 0x16c <KeyPad_Init>
    while (1) 
    {
		RawPort = 0x0;
 2ec:	18 ba       	out	0x18, r1	; 24
		ColumnPort |= ReadColVal;
 2ee:	85 b3       	in	r24, 0x15	; 21
 2f0:	88 67       	ori	r24, 0x78	; 120
 2f2:	85 bb       	out	0x15, r24	; 21
		if(ReadCol != ReadColVal){ // button is pressed but which one
 2f4:	83 b3       	in	r24, 0x13	; 19
 2f6:	88 37       	cpi	r24, 0x78	; 120
 2f8:	c9 f3       	breq	.-14     	; 0x2ec <main+0xa>
			button = Kpad_RetVal(); // return button asci code
 2fa:	0e 94 df 00 	call	0x1be	; 0x1be <Kpad_RetVal>
			if (button == '1') {SET_BIT(PORTC, 7); _delay_ms(300);}
 2fe:	81 33       	cpi	r24, 0x31	; 49
 300:	61 f4       	brne	.+24     	; 0x31a <main+0x38>
 302:	95 b3       	in	r25, 0x15	; 21
 304:	90 68       	ori	r25, 0x80	; 128
 306:	95 bb       	out	0x15, r25	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 308:	2f ef       	ldi	r18, 0xFF	; 255
 30a:	35 ea       	ldi	r19, 0xA5	; 165
 30c:	9e e0       	ldi	r25, 0x0E	; 14
 30e:	21 50       	subi	r18, 0x01	; 1
 310:	30 40       	sbci	r19, 0x00	; 0
 312:	90 40       	sbci	r25, 0x00	; 0
 314:	e1 f7       	brne	.-8      	; 0x30e <main+0x2c>
 316:	00 c0       	rjmp	.+0      	; 0x318 <main+0x36>
 318:	00 00       	nop
			if (button == '2') {CLEAR_BIT(PORTC, 7); _delay_ms(300);}
 31a:	82 33       	cpi	r24, 0x32	; 50
 31c:	61 f4       	brne	.+24     	; 0x336 <main+0x54>
 31e:	95 b3       	in	r25, 0x15	; 21
 320:	9f 77       	andi	r25, 0x7F	; 127
 322:	95 bb       	out	0x15, r25	; 21
 324:	2f ef       	ldi	r18, 0xFF	; 255
 326:	35 ea       	ldi	r19, 0xA5	; 165
 328:	9e e0       	ldi	r25, 0x0E	; 14
 32a:	21 50       	subi	r18, 0x01	; 1
 32c:	30 40       	sbci	r19, 0x00	; 0
 32e:	90 40       	sbci	r25, 0x00	; 0
 330:	e1 f7       	brne	.-8      	; 0x32a <main+0x48>
 332:	00 c0       	rjmp	.+0      	; 0x334 <main+0x52>
 334:	00 00       	nop
			if (button == '3') {SET_BIT(PORTC, 2); _delay_ms(300);}
 336:	83 33       	cpi	r24, 0x33	; 51
 338:	61 f4       	brne	.+24     	; 0x352 <main+0x70>
 33a:	95 b3       	in	r25, 0x15	; 21
 33c:	94 60       	ori	r25, 0x04	; 4
 33e:	95 bb       	out	0x15, r25	; 21
 340:	2f ef       	ldi	r18, 0xFF	; 255
 342:	35 ea       	ldi	r19, 0xA5	; 165
 344:	9e e0       	ldi	r25, 0x0E	; 14
 346:	21 50       	subi	r18, 0x01	; 1
 348:	30 40       	sbci	r19, 0x00	; 0
 34a:	90 40       	sbci	r25, 0x00	; 0
 34c:	e1 f7       	brne	.-8      	; 0x346 <main+0x64>
 34e:	00 c0       	rjmp	.+0      	; 0x350 <main+0x6e>
 350:	00 00       	nop
			if (button == 'A') {CLEAR_BIT(PORTC, 2); _delay_ms(300);}			
 352:	81 34       	cpi	r24, 0x41	; 65
 354:	59 f6       	brne	.-106    	; 0x2ec <main+0xa>
 356:	85 b3       	in	r24, 0x15	; 21
 358:	8b 7f       	andi	r24, 0xFB	; 251
 35a:	85 bb       	out	0x15, r24	; 21
 35c:	2f ef       	ldi	r18, 0xFF	; 255
 35e:	35 ea       	ldi	r19, 0xA5	; 165
 360:	8e e0       	ldi	r24, 0x0E	; 14
 362:	21 50       	subi	r18, 0x01	; 1
 364:	30 40       	sbci	r19, 0x00	; 0
 366:	80 40       	sbci	r24, 0x00	; 0
 368:	e1 f7       	brne	.-8      	; 0x362 <main+0x80>
 36a:	00 c0       	rjmp	.+0      	; 0x36c <main+0x8a>
 36c:	00 00       	nop
 36e:	be cf       	rjmp	.-132    	; 0x2ec <main+0xa>

00000370 <_exit>:
 370:	f8 94       	cli

00000372 <__stop_program>:
 372:	ff cf       	rjmp	.-2      	; 0x372 <__stop_program>
